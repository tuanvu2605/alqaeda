{"version":3,"sources":["webpack:///./src/views/excel/upload-excel.vue?0ffd","webpack:///./src/components/UploadExcel/index.vue?6aef","webpack:///src/components/UploadExcel/index.vue","webpack:///./src/components/UploadExcel/index.vue?3b53","webpack:///./src/components/UploadExcel/index.vue?6708","webpack:///src/views/excel/upload-excel.vue","webpack:///./src/views/excel/upload-excel.vue?1bc4","webpack:///./src/views/excel/upload-excel.vue","webpack:///./src/components/UploadExcel/index.vue?4be8"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","attrs","handleSuccess","beforeUpload","staticStyle","tableData","_l","item","key","staticRenderFns","ref","on","handleClick","handleDrop","handleDragover","_v","loading","handleUpload","props","Function","onSuccess","data","excelData","header","results","methods","generateData","e","stopPropagation","preventDefault","files","length","isExcel","rawFile","$message","error","upload","dataTransfer","dropEffect","$refs","click","value","before","readerData","Promise","reader","onload","resolve","readAsArrayBuffer","getHeaderRow","C","range","s","c","cell","t","hdr","headers","push","test","file","name","component"],"mappings":"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","file":"js/chunk-f82ceb12.be4aed43.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"app-container\"},[_c('upload-excel-component',{attrs:{\"on-success\":_vm.handleSuccess,\"before-upload\":_vm.beforeUpload}}),_c('el-table',{staticStyle:{\"width\":\"100%\",\"margin-top\":\"20px\"},attrs:{\"data\":_vm.tableData,\"border\":\"\",\"highlight-current-row\":\"\"}},_vm._l((_vm.tableHeader),function(item){return _c('el-table-column',{key:item,attrs:{\"prop\":item,\"label\":item}})}),1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('input',{ref:\"excel-upload-input\",staticClass:\"excel-upload-input\",attrs:{\"type\":\"file\",\"accept\":\".xlsx, .xls\"},on:{\"change\":_vm.handleClick}}),_c('div',{staticClass:\"drop\",on:{\"drop\":_vm.handleDrop,\"dragover\":_vm.handleDragover,\"dragenter\":_vm.handleDragover}},[_vm._v(\" Drop excel file here or \"),_c('el-button',{staticStyle:{\"margin-left\":\"16px\"},attrs:{\"loading\":_vm.loading,\"size\":\"mini\",\"type\":\"primary\"},on:{\"click\":_vm.handleUpload}},[_vm._v(\" Browse \")])],1)])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div>\n    <input ref=\"excel-upload-input\" class=\"excel-upload-input\" type=\"file\" accept=\".xlsx, .xls\" @change=\"handleClick\">\n    <div class=\"drop\" @drop=\"handleDrop\" @dragover=\"handleDragover\" @dragenter=\"handleDragover\">\n      Drop excel file here or\n      <el-button :loading=\"loading\" style=\"margin-left:16px;\" size=\"mini\" type=\"primary\" @click=\"handleUpload\">\n        Browse\n      </el-button>\n    </div>\n  </div>\n</template>\n\n<script>\nimport XLSX from 'xlsx'\n\nexport default {\n  props: {\n    beforeUpload: Function, // eslint-disable-line\n    onSuccess: Function// eslint-disable-line\n  },\n  data() {\n    return {\n      loading: false,\n      excelData: {\n        header: null,\n        results: null\n      }\n    }\n  },\n  methods: {\n    generateData({ header, results }) {\n      this.excelData.header = header\n      this.excelData.results = results\n      this.onSuccess && this.onSuccess(this.excelData)\n    },\n    handleDrop(e) {\n      e.stopPropagation()\n      e.preventDefault()\n      if (this.loading) return\n      const files = e.dataTransfer.files\n      if (files.length !== 1) {\n        this.$message.error('Only support uploading one file!')\n        return\n      }\n      const rawFile = files[0] // only use files[0]\n\n      if (!this.isExcel(rawFile)) {\n        this.$message.error('Only supports upload .xlsx, .xls, .csv suffix files')\n        return false\n      }\n      this.upload(rawFile)\n      e.stopPropagation()\n      e.preventDefault()\n    },\n    handleDragover(e) {\n      e.stopPropagation()\n      e.preventDefault()\n      e.dataTransfer.dropEffect = 'copy'\n    },\n    handleUpload() {\n      this.$refs['excel-upload-input'].click()\n    },\n    handleClick(e) {\n      const files = e.target.files\n      const rawFile = files[0] // only use files[0]\n      if (!rawFile) return\n      this.upload(rawFile)\n    },\n    upload(rawFile) {\n      this.$refs['excel-upload-input'].value = null // fix can't select the same excel\n\n      if (!this.beforeUpload) {\n        this.readerData(rawFile)\n        return\n      }\n      const before = this.beforeUpload(rawFile)\n      if (before) {\n        this.readerData(rawFile)\n      }\n    },\n    readerData(rawFile) {\n      this.loading = true\n      // remove reject in params\n      return new Promise((resolve) => {\n        const reader = new FileReader()\n        reader.onload = e => {\n          const data = e.target.result\n          const workbook = XLSX.read(data, { type: 'array' })\n          const firstSheetName = workbook.SheetNames[0]\n          const worksheet = workbook.Sheets[firstSheetName]\n          const header = this.getHeaderRow(worksheet)\n          const results = XLSX.utils.sheet_to_json(worksheet)\n          this.generateData({ header, results })\n          this.loading = false\n          resolve()\n        }\n        reader.readAsArrayBuffer(rawFile)\n      })\n    },\n    getHeaderRow(sheet) {\n      const headers = []\n      const range = XLSX.utils.decode_range(sheet['!ref'])\n      let C\n      const R = range.s.r\n      /* start in the first row */\n      for (C = range.s.c; C <= range.e.c; ++C) { /* walk every column in the range */\n        const cell = sheet[XLSX.utils.encode_cell({ c: C, r: R })]\n        /* find the cell in the first row */\n        let hdr = 'UNKNOWN ' + C // <-- replace with your desired default\n        if (cell && cell.t) hdr = XLSX.utils.format_cell(cell)\n        headers.push(hdr)\n      }\n      return headers\n    },\n    isExcel(file) {\n      return /\\.(xlsx|xls|csv)$/.test(file.name)\n    }\n  }\n}\n</script>\n\n<style scoped>\n.excel-upload-input{\n  display: none;\n  z-index: -9999;\n}\n.drop{\n  border: 2px dashed #bbb;\n  width: 600px;\n  height: 160px;\n  line-height: 160px;\n  margin: 0 auto;\n  font-size: 24px;\n  border-radius: 5px;\n  text-align: center;\n  color: #bbb;\n  position: relative;\n}\n</style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=7e8d1348&scoped=true&\"\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\nimport style0 from \"./index.vue?vue&type=style&index=0&id=7e8d1348&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"7e8d1348\",\n  null\n  \n)\n\nexport default component.exports","<template>\n    <div class=\"app-container\">\n        <upload-excel-component :on-success=\"handleSuccess\" :before-upload=\"beforeUpload\" />\n        <el-table :data=\"tableData\" border highlight-current-row style=\"width: 100%;margin-top:20px;\">\n            <el-table-column v-for=\"item of tableHeader\" :key=\"item\" :prop=\"item\" :label=\"item\" />\n        </el-table>\n    </div>\n</template>\n\n<script>\n    import UploadExcelComponent from '../../components/UploadExcel'\n\n    export default {\n        name: 'UploadExcel',\n        components: { UploadExcelComponent },\n        data() {\n            return {\n                tableData: [],\n                tableHeader: []\n            }\n        },\n        methods: {\n            beforeUpload(file) {\n                const isLt1M = file.size / 1024 / 1024 < 1\n\n                if (isLt1M) {\n                    return true\n                }\n\n                this.$message({\n                    message: 'Please do not upload files larger than 1m in size.',\n                    type: 'warning'\n                })\n                return false\n            },\n            handleSuccess({ results, header }) {\n                this.tableData = results\n                this.tableHeader = header\n            }\n        }\n    }\n</script>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./upload-excel.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./upload-excel.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./upload-excel.vue?vue&type=template&id=4730ea84&\"\nimport script from \"./upload-excel.vue?vue&type=script&lang=js&\"\nexport * from \"./upload-excel.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=style&index=0&id=7e8d1348&scoped=true&lang=css&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=style&index=0&id=7e8d1348&scoped=true&lang=css&\""],"sourceRoot":""}